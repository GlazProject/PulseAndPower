/*
 * Сервис спортзалов Pulse&Power
 *
 * Позволяет совершать регистрацию, вход в аккаунт, а так же покупку абонементов в спортзал
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AuthApiController : ControllerBase
    { 
        /// <summary>
        /// Confirm phone with received code
        /// </summary>
        /// <remarks>Send new authSid, if code is correct</remarks>
        /// <param name="code">Code received from sms</param>
        /// <response code="200">successful operation</response>
        /// <response code="201">Success but not registered user</response>
        /// <response code="403">Incorrect code</response>
        /// <response code="500">Server error</response>
        [HttpPost]
        [Route("/api/v1_0//auth/confirmPhone/{code}")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AuthConfirmPhoneCodePost")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Server error")]
        public virtual IActionResult AuthConfirmPhoneCodePost([FromQuery][Required()]string code)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Logs out current logged in user session
        /// </summary>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/api/v1_0//auth/logout")]
        [Authorize(AuthenticationSchemes = ApiKeyAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("AuthLogoutGet")]
        public virtual IActionResult AuthLogoutGet()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Send SMS verification code
        /// </summary>
        /// <remarks>Sends an SMS verification code to the specified phone number</remarks>
        /// <param name="normalizedNumber">The normalized phone number with country code +7</param>
        /// <response code="200">SMS sent successfully</response>
        /// <response code="400">Bad request</response>
        /// <response code="403">Too many requests for phone number</response>
        /// <response code="500">Server error</response>
        [HttpPost]
        [Route("/api/v1_0//auth/phone/{normalizedNumber}")]
        [ValidateModelState]
        [SwaggerOperation("AuthPhoneNormalizedNumberPost")]
        [SwaggerResponse(statusCode: 400, type: typeof(Error), description: "Bad request")]
        [SwaggerResponse(statusCode: 403, type: typeof(InlineResponse403), description: "Too many requests for phone number")]
        [SwaggerResponse(statusCode: 500, type: typeof(Error), description: "Server error")]
        public virtual IActionResult AuthPhoneNormalizedNumberPost([FromRoute][Required]string normalizedNumber)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403, default(InlineResponse403));

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(Error));

            throw new NotImplementedException();
        }
    }
}
